{"version":3,"sources":["components/App/App.module.css","components/redux/contacts-types.js","components/redux/contacts-reduser.js","components/redux/contacts-store.js","components/Section/Section.jsx","components/hooks/useLocalStoraje.js","components/InputForm/InputForm.jsx","components/redux/contacts-actions.js","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/App/App.js","index.js"],"names":["module","exports","ADD","DELETE","FILTER","itemsInitialState","id","uuidv4","name","number","contactsReducer","combineReducers","items","state","type","payload","types","stateWithoutDeletedContacts","filter","contact","toLowerCase","rootReducer","contacts","store","createStore","composeWithDevTools","Section","title","children","className","useLocalStorage","key","defaultValue","useState","JSON","parse","window","localStorage","getItem","setState","useEffect","setItem","stringify","connect","dispatch","addContact","actions","setName","setNumber","inputChange","evt","target","value","onSubmit","preventDefault","reset","onChange","pattern","required","filterContact","text","deleteContact","onClick","includes","map","s","app","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,IAAM,mB,gLCDXC,EAAM,eACNC,EAAS,kBACTC,EAAS,kBCEhBC,EAAoB,CACxB,CAAEC,GAAIC,cAAUC,KAAM,gBAAiBC,OAAQ,aAC/C,CAAEH,GAAIC,cAAUC,KAAM,iBAAkBC,OAAQ,aAChD,CAAEH,GAAIC,cAAUC,KAAM,gBAAiBC,OAAQ,aAC/C,CAAEH,GAAIC,cAAUC,KAAM,iBAAkBC,OAAQ,cA8BrCC,EAAkBC,0BAAgB,CAC7CC,MA5BmB,WAAmD,IAAlDC,EAAiD,uDAAzCR,EAAyC,yCAApBS,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACvD,OAAQD,GACN,KAAKE,EACH,MAAM,GAAN,mBAAWH,GAAX,CAAkBE,IAEpB,KAAKC,EACH,IAAMC,EAA8BJ,EAAMK,QACxC,SAAAC,GAAO,OAAIA,EAAQb,KAAOS,KAG5B,OAAOE,EAET,QACE,OAAOJ,IAgBXK,OAZoB,WAAoC,IAAnCL,EAAkC,uDAA1B,GAA0B,yCAApBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzC,OAAQD,IACDE,EACID,EAAQK,cAGRP,KC9BPQ,EAAcV,0BAAgB,CAClCW,SAAUZ,IAKGa,EAFDC,sBAAYH,EAAaI,iC,eCNhC,SAASC,EAAT,GAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC/B,OACE,sBAAKC,UAAU,UAAf,UACGF,GAAS,6BAAKA,IACdC,K,WCJA,SAASE,EAAgBC,EAAKC,GACnC,MAA0BC,oBAAS,WAAO,IAAD,EACvC,iBAAOC,KAAKC,MAAMC,OAAOC,aAAaC,QAAQP,WAA9C,QAAuDC,KADzD,mBAAOnB,EAAP,KAAc0B,EAAd,KAQA,OAJAC,qBAAU,WACRJ,OAAOC,aAAaI,QAAQV,EAAKG,KAAKQ,UAAU7B,MAC/C,CAACkB,EAAKlB,IAEF,CAACA,EAAO0B,G,MC4DjB,IAKeI,cAAQ,MALI,SAAAC,GAAQ,MAAK,CACtCC,WAAY,gBAAGrC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,OACVmC,ECtEsB,SAAC,GAAD,IAAGpC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAT,MAAuB,CAC/CK,KAAME,EACND,QAAS,CACPT,GAAIC,cACJC,OACAC,WDiESqC,CAAmB,CAAEtC,OAAMC,gBAGzBkC,EAtEf,YAAoC,IAAfE,EAAc,EAAdA,WACnB,EAAwBf,EAAgB,OAAQ,IAAhD,mBAAOtB,EAAP,KAAauC,EAAb,KACA,EAA4BjB,EAAgB,SAAU,IAAtD,mBAAOrB,EAAP,KAAeuC,EAAf,KAEMC,EAAc,SAAAC,GAClB,MAAwBA,EAAIC,OAApB3C,EAAR,EAAQA,KAAM4C,EAAd,EAAcA,MAEd,OAAQ5C,GACN,IAAK,OACHuC,EAAQK,GACR,MAEF,IAAK,SACHJ,EAAUI,KAiBhB,OACE,uBAAMC,SAViB,SAAAH,GACvBA,EAAII,iBAEJT,EAAW,CAAErC,OAAMC,WACnBsC,EAAQ,IACRC,EAAU,IACVE,EAAIC,OAAOI,SAIX,UACE,yCAEE,uBACEC,SAAUP,EACVnC,KAAK,OACLN,KAAK,OACLiD,QAAQ,yHACR9B,MAAM,kcACN+B,UAAQ,OAIZ,2CAEE,uBACEF,SAAUP,EACVnC,KAAK,MACLN,KAAK,SACLiD,QAAQ,yFACR9B,MAAM,giBACN+B,UAAQ,OAIZ,wBAAQ5C,KAAK,SAAb,+B,MEhDN,IAIe6B,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCe,cAAe,SAAAT,GAAG,OAAIN,GDEKgB,ECF0BV,EAAIC,OAAOC,MDE5B,CACpCtC,KAAME,EACND,QAAS6C,KAFkB,IAAAA,MCCdjB,EAbf,YAAoC,IAAlBgB,EAAiB,EAAjBA,cAChB,OACE,0DAEE,uBAAO7C,KAAK,OAAO0C,SAAUG,UCKnC,IAIehB,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCiB,cAAe,SAAAX,GAAG,OAAIN,GFHKtC,EEG0B4C,EAAIC,OAAO7C,GFH9B,CAClCQ,KAAME,EACND,QAAST,KAFkB,IAAAA,MEMdqC,EAff,YAAsD,IAA3BxB,EAA0B,EAA1BA,QAAS0C,EAAiB,EAAjBA,cAClC,OACE,qCACG1C,EAAQX,KADX,IACkBW,EAAQV,OACxB,wBAAQK,KAAK,SAASR,GAAIa,EAAQb,GAAIwD,QAASD,EAA/C,0BCsBN,IAKelB,eALS,SAAA9B,GAAK,MAAK,CAChCS,SAAUT,EAAMS,SAASV,MACzBM,OAAQL,EAAMS,SAASJ,UAGVyB,EA7Bf,YAAsD,IAA/BrB,EAA8B,EAA9BA,SAAUJ,EAAoB,EAApBA,OAAQU,EAAY,EAAZA,SACvC,OACE,gCACE,0CACCA,EACD,6BACIV,EAMEI,EACGJ,QAAO,SAAAC,GAAO,OAAIA,EAAQX,KAAKY,cAAc2C,SAAS7C,MACtD8C,KAAI,SAAA7C,GAAO,OACV,6BACE,cAAC,EAAD,CAAiBA,QAASA,KADnBA,EAAQb,OARrBgB,EAAS0C,KAAI,SAAA7C,GAAO,OAClB,6BACE,cAAC,EAAD,CAAiBA,QAASA,KADnBZ,0B,iBCMvB,IAIeoC,eAJS,SAAA9B,GAAK,MAAK,CAChCS,SAAUT,EAAMS,SAASV,SAGZ+B,EAhBf,YAA4B,IAAbrB,EAAY,EAAZA,SACb,OACE,qBAAKO,UAAWoC,IAAEC,IAAlB,SACE,eAACxC,EAAD,CAASC,MAAO,YAAhB,UACE,cAAC,EAAD,IAEA,cAAC,EAAD,UAAcL,EAAS6C,OAAS,GAAK,cAAC,EAAD,cCN7CC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU/C,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJgD,SAASC,eAAe,W","file":"static/js/main.aed433f9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2aWaK\"};","export const ADD = 'contacts/add';\nexport const DELETE = 'contacts/delete';\nexport const FILTER = 'contacts/filter';\n","import { combineReducers } from 'redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport * as types from './contacts-types';\n\nconst itemsInitialState = [\n  { id: uuidv4(), name: 'Rosie Simpson', number: '459-12-56' },\n  { id: uuidv4(), name: 'Hermione Kline', number: '443-89-12' },\n  { id: uuidv4(), name: 'Eden Clements', number: '645-17-79' },\n  { id: uuidv4(), name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst itemsReducer = (state = itemsInitialState, { type, payload }) => {\n  switch (type) {\n    case types.ADD:\n      return [...state, payload];\n\n    case types.DELETE:\n      const stateWithoutDeletedContacts = state.filter(\n        contact => contact.id !== payload,\n      );\n\n      return stateWithoutDeletedContacts;\n\n    default:\n      return state;\n  }\n};\n\nconst filterReducer = (state = '', { type, payload }) => {\n  switch (type) {\n    case types.FILTER:\n      return payload.toLowerCase();\n\n    default:\n      return state;\n  }\n};\n\nexport const contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\n","import { createStore, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { contactsReducer } from './contacts-reduser';\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n});\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;\n","import PropTypes from 'prop-types';\r\n\r\nexport function Section({ title, children }) {\r\n  return (\r\n    <div className=\"section\">\r\n      {title && <h2>{title}</h2>}\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n","import { useState, useEffect } from 'react';\n\nexport function useLocalStorage(key, defaultValue) {\n  const [state, setState] = useState(() => {\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\n  });\n\n  useEffect(() => {\n    window.localStorage.setItem(key, JSON.stringify(state));\n  }, [key, state]);\n\n  return [state, setState];\n}\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\nimport { useLocalStorage } from '../hooks/useLocalStoraje';\r\nimport s from './InputForm.module.css';\r\n\r\nfunction InputForm({ addContact }) {\r\n  const [name, setName] = useLocalStorage('name', '');\r\n  const [number, setNumber] = useLocalStorage('number', '');\r\n\r\n  const inputChange = evt => {\r\n    const { name, value } = evt.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    addContact({ name, number });\r\n    setName('');\r\n    setNumber('');\r\n    evt.target.reset();\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleFormSubmit}>\r\n      <label>\r\n        Name\r\n        <input\r\n          onChange={inputChange}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label>\r\n        Number\r\n        <input\r\n          onChange={inputChange}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button type=\"submit\">Add contact</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nInputForm.propTypes = {\r\n  addContact: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addContact: ({ name, number }) =>\r\n    dispatch(actions.addContact({ name, number })),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(InputForm);\r\n","import { v4 as uuidv4 } from 'uuid';\nimport * as types from './contacts-types';\n\nexport const addContact = ({ name, number }) => ({\n  type: types.ADD,\n  payload: {\n    id: uuidv4(),\n    name,\n    number,\n  },\n});\n\nexport const deleteContact = id => ({\n  type: types.DELETE,\n  payload: id,\n});\n\nexport const filterContact = text => ({\n  type: types.FILTER,\n  payload: text,\n});\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\nimport s from './Filter.module.css';\r\n\r\nfunction Filter({ filterContact }) {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" onChange={filterContact} />\r\n    </label>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  filterContact: evt => dispatch(actions.filterContact(evt.target.value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n\r\nFilter.propTypes = {\r\n  info: PropTypes.shape({\r\n    contacts: PropTypes.array,\r\n  }),\r\n  filterContact: PropTypes.func.isRequired,\r\n};\r\n","import { connect } from 'react-redux';\r\nimport * as actions from '../redux/contacts-actions';\r\n\r\nfunction ContactListItem({ contact, deleteContact }) {\r\n  return (\r\n    <>\r\n      {contact.name} {contact.number}\r\n      <button type=\"button\" id={contact.id} onClick={deleteContact}>\r\n        Delete\r\n      </button>\r\n    </>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  deleteContact: evt => dispatch(actions.deleteContact(evt.target.id)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(ContactListItem);\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\n\r\nfunction ContactList({ contacts, filter, children }) {\r\n  return (\r\n    <div>\r\n      <h2>Contacts</h2>\r\n      {children}\r\n      <ul>\r\n        {!filter\r\n          ? contacts.map(contact => (\r\n              <li key={uuidv4()}>\r\n                <ContactListItem contact={contact} />\r\n              </li>\r\n            ))\r\n          : contacts\r\n              .filter(contact => contact.name.toLowerCase().includes(filter))\r\n              .map(contact => (\r\n                <li key={contact.id}>\r\n                  <ContactListItem contact={contact} />\r\n                </li>\r\n              ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.contacts.items,\r\n  filter: state.contacts.filter,\r\n});\r\n\r\nexport default connect(mapStateToProps)(ContactList);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array,\r\n  filter: PropTypes.string,\r\n  deleteContact: PropTypes.func,\r\n  children: PropTypes.node,\r\n};\r\n","import { connect } from 'react-redux';\nimport { Section } from '../Section/Section.jsx';\nimport InputForm from '../InputForm/InputForm.jsx';\nimport Filter from '../Filter/Filter.jsx';\nimport ContactList from '../ContactList/ContactList.jsx';\nimport s from './App.module.css';\n\nfunction App({ contacts }) {\n  return (\n    <div className={s.app}>\n      <Section title={'Phonebook'}>\n        <InputForm />\n\n        <ContactList>{contacts.length > 2 && <Filter />}</ContactList>\n      </Section>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n});\n\nexport default connect(mapStateToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './components/redux/contacts-store';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}